/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package javaproject.utt.a22;

/**
 * Classe permettant le controle du pion (combattant).
 */
public class Pion{
    /**
     * L'attribut ECTS équivaut à la vie du pion, une fois à 0 notre pion meurt.
     */
    private double ECTS = 30;

    /**
     * Statistique permettant l'esquive d'une attaque ou l'atteinte de la cible lors de l'attque (0 à 10).
     */
    private int dexterite;

    /**
     * Statistique de force de l'attaque. Augmente les degats de 10% par points affectes (0 à 10).
     */
    private int force;
    
    /**
     * Statistique de resistance aux attaques. Augmente la resistance de 5% par points affectes (0 à 10).
     */
    private int resistance;
    
    /**
     * Statistique de vie supplémentaire. Augmente la vie initiale du nombre de points affectes (0 à 30).
     */
    private int constitution;
    
    /**
     * Statistique d'initiative. Determine quel pion attaque le premier (0 à 10).
     */
    private int initiative;

    /**
     * Status de combat du pion (Combattant, Reserviste ou Indefini).
     */
    private StatusPion status;



    /**
     * Main
     * @param args
     */
    public static void main(String[] args){
        
    }

    /**
     * Enumeration du status de combat du pion.
     */
    enum StatusPion{
        Combattant, Reserviste, Indefini;
    }



    /**
     * Constructeur Pion
     */
    public Pion(){
        this.dexterite = 0;
        this.force = 0;
        this.resistance = 0;
        this.constitution = 0;
        this.initiative = 0;
        this.status = StatusPion.Indefini;
    }

    /**
     * Methode pour ajouter ou retirer des ECTS au pion.
     * @param constitution
     */
    public void changerECTS(int constitution){
        /*
         * Changement des ECTS s.s.i 60 > this.ECTS + constitution >= 0.
         */
    }

    /**
     * Methode pour recuperer les ECTS du pion.
     * @return this.ECTS
     */
    public double getECTS(){
        return this.ECTS;
    }


    /**
     * Methode pour ajouter ou retirer de la dexterite au pion.
     * @param dexterite
     */
    public void changerDexterite(int dexterite){
        /*
         * Changement de la dexterite s.s.i. 10 > this.dexterite + dexterite > 0.
         */
    }

    /**
     * Methode pour recuperer la dexterite du pion.
     * @return this.dexterite
     */
    public int getDexterite(){
        return this.dexterite;
    }


    /**
     * Methode pour ajouter ou retirer de la force au pion.
     * @param force
     */
    public void changerForce(int force){
        /*
         * Changement de la force s.s.i. 10 > this.force + force > 0.
         */
    }

    /**
     * Methode pour recuperer la force du pion.
     * @return this.force
     */
    public int getForce(){
        return this.force;
    }


    /**
     * Methode pour ajouter ou retirer de la resistance au pion.
     * @param resistance
     */
    public void changerResistance(int resistance){
        /*
         * Changement de la resistance s.s.i. 10 > this.resistance + resistance > 0.
         */
    }

    /**
     * Methode pour recuperer la resistance du pion.
     * @return this.resistance
     */
    public int getResistance(){
        return this.resistance;
    }


    /**
     * Methode pour ajouter ou retirer de la constitution au pion.
     * @param constitution
     */
    public void changerConstitution(int constitution){
        /*
         * Changement de la constitution s.s.i. 30 > this.constitution + constitution > 0.
         */
    }

    /**
     * Methode pour recuperer la constitution du pion.
     * @return this.constitution
     */
    public int getConstitution(){
        return this.constitution;
    }


    /**
     * Methode pour ajouter ou retirer de l'initiative au pion.
     * @param initiative
     */
    public void changerInitiative(int initiative){
        /*
         * Changement de l'initiative s.s.i. 10 > this.initiative + initiative > 0
         */
    }

    /**
     * Methode pour recuperer l'initiative du pion.
     * @return this.initiative
     */
    public int getInitiative(){
        return this.initiative;
    }


    /**
     * Methode pour changer le status de combat du pion.
     * @param status
     */
    public void setStatus(StatusPion status){
        /*
         * Changement de status du pion
         */
    }

    /**
     * Methode pour recuperer le status de combat du pion.
     * @return this.status
     */
    public StatusPion getStatus(){
        /*
         * Recupere le status du pion.
         */
        return this.status;
    }


    /**
     * Methode pour changer la zone du pion.
     * @param zone
     */
    public void changerZone(/*Zone zone*/){
        /*
         * Changement de la zone du pion s.s.i. sa zone est conquise.
         */
    }

    /**
     * Methode pour recuperer la zone du pion.
     * @return
     */
    public String /*Zone*/ getZone(){
        return /*Nom de la zone ou la zone entiere*/"";
    }


    /**
     * Methode pour changer la strategie du pion.
     * @param strategie
     */
    public void changerStrategie(/*Strategie strategie*/){
        /*
         * Changement de startegie du pion
         */
    }

    /**
     * Methode pour recuperer la strategie du pion.
     * @return
     */
    public String /*Strategie*/ getStrategie(){
        return /*Nom de la strategie ou la strategie entiere*/"";
    }
}
